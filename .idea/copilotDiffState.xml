<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.md" />
              <option name="originalContent" value="# Baby Monitor&#10;&#10;## Overview&#10;Baby Monitor is an Android application designed to help parents remotely monitor their baby's activities and environment. The app leverages modern Android technologies and integrates with Google services for enhanced features.&#10;&#10;## Features&#10;- Real-time monitoring&#10;- Notifications and alerts&#10;- Secure data handling&#10;- User-friendly interface&#10;&#10;## Project Structure&#10;```&#10;baby-monitor/&#10;├── app/&#10;│   ├── src/&#10;│   │   ├── main/&#10;│   │   │   ├── java/         # Application source code&#10;│   │   │   ├── res/          # Resources (layouts, drawables, etc.)&#10;│   │   │   └── AndroidManifest.xml&#10;│   │   ├── test/             # Unit tests&#10;│   │   └── androidTest/      # Instrumentation tests&#10;│   ├── build.gradle.kts      # App-level Gradle config&#10;│   └── google-services.json  # Google services config&#10;├── build.gradle.kts          # Project-level Gradle config&#10;├── settings.gradle.kts       # Gradle settings&#10;├── gradle/                   # Gradle wrapper and config&#10;└── README.md                 # Project documentation&#10;```&#10;&#10;## Prerequisites&#10;- Android Studio (latest recommended)&#10;- JDK 17+&#10;- Gradle (wrapper included)&#10;- Google account for Firebase integration&#10;&#10;## Setup Instructions&#10;1. **Clone the repository:**&#10;   ```bash&#10;   git clone &lt;repo-url&gt;&#10;   cd baby-monitor&#10;   ```&#10;2. **Open in Android Studio:**&#10;   - Select `Open an Existing Project` and choose the `baby-monitor` folder.&#10;3. **Configure Google Services:**&#10;   - Ensure `google-services.json` is present in `app/` for Firebase features.&#10;4. **Build and Run:**&#10;   - Click `Run` in Android Studio or use:&#10;     ```bash&#10;     ./gradlew assembleDebug&#10;     ```&#10;&#10;## Usage&#10;- Launch the app on your device/emulator.&#10;- Follow on-screen instructions to set up monitoring.&#10;- Configure notifications and preferences as needed.&#10;&#10;## Contributing&#10;Contributions are welcome! Please fork the repository and submit a pull request. For major changes, open an issue first to discuss your ideas.&#10;&#10;## License&#10;This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.&#10;&#10;## Contact&#10;For questions or support, please contact the maintainer at: nxumalobukeka66@gmail.com&#10;&#10;" />
              <option name="updatedContent" value="# Baby Monitor&#10;&#10;## Overview&#10;Baby Monitor is an Android application designed to help parents remotely monitor their baby's activities and environment. The app leverages modern Android technologies and integrates with Google services for enhanced features.&#10;&#10;## Features&#10;- Real-time monitoring&#10;- Notifications and alerts&#10;- Secure data handling&#10;- User-friendly interface&#10;&#10;## Project Structure&#10;```&#10;baby-monitor/&#10;├── app/&#10;│   ├── src/&#10;│   │   ├── main/&#10;│   │   │   ├── java/         # Application source code&#10;│   │   │   ├── res/          # Resources (layouts, drawables, etc.)&#10;│   │   │   └── AndroidManifest.xml&#10;│   │   ├── test/             # Unit tests&#10;│   │   └── androidTest/      # Instrumentation tests&#10;│   ├── build.gradle.kts      # App-level Gradle config&#10;│   └── google-services.json  # Google services config&#10;├── build.gradle.kts          # Project-level Gradle config&#10;├── settings.gradle.kts       # Gradle settings&#10;├── gradle/                   # Gradle wrapper and config&#10;└── README.md                 # Project documentation&#10;```&#10;&#10;## Prerequisites&#10;- Android Studio (latest recommended)&#10;- JDK 17+&#10;- Gradle (wrapper included)&#10;- Google account for Firebase integration&#10;&#10;## Setup Instructions&#10;1. **Clone the repository:**&#10;   ```bash&#10;   git clone &lt;repo-url&gt;&#10;   cd baby-monitor&#10;   ```&#10;2. **Open in Android Studio:**&#10;   - Select `Open an Existing Project` and choose the `baby-monitor` folder.&#10;3. **Configure Google Services:**&#10;   - Ensure `google-services.json` is present in `app/` for Firebase features.&#10;4. **Build and Run:**&#10;   - Click `Run` in Android Studio or use:&#10;     ```bash&#10;     ./gradlew assembleDebug&#10;     ```&#10;&#10;## Usage&#10;- Launch the app on your device/emulator.&#10;- Follow on-screen instructions to set up monitoring.&#10;- Configure notifications and preferences as needed.&#10;&#10;## Contributing&#10;Contributions are welcome! Please fork the repository and submit a pull request. For major changes, open an issue first to discuss your ideas.&#10;&#10;## License&#10;This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.&#10;&#10;## Contact&#10;For questions or support, please contact the maintainer at: nxumalobukeka66@gmail.com&#10;&#10;# Architecture &amp; Logic&#10;&#10;## 1. Overview&#10;The Baby Monitor app follows a modular, layered architecture using modern Android best practices. It leverages MVVM (Model-View-ViewModel) for separation of concerns, Kotlin for implementation, and integrates with Firebase for backend services.&#10;&#10;## 2. Main Components&#10;- **UI Layer (View):** Activities and Fragments in `app/src/main/java/` handle user interaction and display data.&#10;- **ViewModel Layer:** ViewModels manage UI-related data and business logic, exposing LiveData/StateFlow to the UI.&#10;- **Model Layer:** Data classes and repositories handle data operations, including local storage and remote (Firebase) access.&#10;- **Service Layer:** Background services (e.g., monitoring, notifications) run tasks independently of UI.&#10;- **Firebase Integration:** Handles authentication, real-time database, and push notifications.&#10;&#10;## 3. Data Flow&#10;1. **User Interaction:** UI components (Activity/Fragment) capture user actions (e.g., start monitoring).&#10;2. **ViewModel Processing:** UI calls ViewModel methods, which process logic and update state.&#10;3. **Repository/Data Source:** ViewModel interacts with repositories to fetch/store data (local DB or Firebase).&#10;4. **LiveData/StateFlow:** ViewModel exposes observable data to UI, which reacts to changes automatically.&#10;5. **Notifications:** Services trigger notifications via Android NotificationManager and Firebase Cloud Messaging.&#10;&#10;## 4. Core Logic&#10;- **Monitoring:**&#10;  - App starts a background service to monitor baby’s environment (audio, video, or sensor data).&#10;  - Service processes data and triggers alerts if thresholds are exceeded (e.g., noise level, movement).&#10;- **Notifications:**&#10;  - Local notifications for immediate alerts.&#10;  - Push notifications via Firebase for remote alerts.&#10;- **Data Storage:**&#10;  - Local: SharedPreferences or Room DB for settings and logs.&#10;  - Remote: Firebase Realtime Database for syncing events and user data.&#10;- **User Authentication:**&#10;  - Firebase Auth for secure login and user management.&#10;&#10;## 5. Key Classes &amp; Files&#10;- `MainActivity.kt` / `MonitorFragment.kt`: UI entry points.&#10;- `MonitorViewModel.kt`: Handles monitoring logic and state.&#10;- `MonitorService.kt`: Background service for continuous monitoring.&#10;- `NotificationHelper.kt`: Utility for sending notifications.&#10;- `Repository.kt`: Data access layer for local and remote sources.&#10;- `FirebaseManager.kt`: Handles Firebase interactions.&#10;&#10;## 6. Example Flow Diagram&#10;```&#10;[User Action] → [UI (Activity/Fragment)] → [ViewModel] → [Repository] → [Firebase/Local DB]&#10;         ↑                                                        ↓&#10;   [Notification] ← [Service] ← [Sensor/Event]&#10;```&#10;&#10;## 7. Extensibility &amp; Best Practices&#10;- Follows MVVM for testability and maintainability.&#10;- Uses Kotlin Coroutines/Flow for async operations.&#10;- Dependency Injection (e.g., Hilt/Dagger) recommended for scaling.&#10;- Modular codebase for easy feature addition.&#10;&#10;## 8. References&#10;- [Android MVVM Guide](https://developer.android.com/jetpack/guide)&#10;- [Firebase Android Setup](https://firebase.google.com/docs/android/setup)" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_notification.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_notification.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#2196F3&quot;&#10;        android:pathData=&quot;M12,22a2,2 0 0,0 2,-2h-4a2,2 0 0,0 2,2zm6,-6v-5c0,-3.07 -1.63,-5.64 -4.5,-6.32V4a1.5,1.5 0 0,0 -3,0v0.68C7.63,5.36 6,7.92 6,11v5l-1.7,1.7a1,1 0 0,0 0.7,1.7h14a1,1 0 0,0 0.7,-1.7L18,16z&quot;/&gt;&#10;&lt;/vector&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#2196F3&quot;&#10;        android:pathData=&quot;M12,22a2,2 0 0,0 2,-2h-4a2,2 0 0,0 2,2zm6,-6v-5c0,-3.07 -1.63,-5.64 -4.5,-6.32V4a1.5,1.5 0 0,0 -3,0v0.68C7.63,5.36 6,7.92 6,11v5l-1.7,1.7a1,1 0 0,0 0.7,1.7h14a1,1 0 0,0 0.7,-1.7L18,16z&quot;/&gt;&#10;&lt;/vector&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>